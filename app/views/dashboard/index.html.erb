<script type="text/javascript">

  var pusher = new Pusher('dbd07205176161ade138');
  var channel = pusher.subscribe('dashboard_channel');

  (function(d){d.fn.stupidtable=function(b){return this.each(function(){var a=d(this);b=b||{};b=d.extend({},d.fn.stupidtable.default_sort_fns,b);a.on("click","th",function(){var n=a.children("tbody").children("tr"),e=d(this),j=0,m=d.fn.stupidtable.dir;a.find("th").slice(0,e.index()).each(function(){var a=d(this).attr("colspan")||1;j+=parseInt(a,10)});var l=e.data("sort-dir")===m.ASC?m.DESC:m.ASC,p=l==m.DESC?e.data("sort-desc")||e.data("sort")||null:e.data("sort")||null;null!==p&&(a.trigger("beforetablesort",
{column:j,direction:l}),a.css("display"),setTimeout(function(){var k=[],c=b[p];n.each(function(a,b){var c=d(b).children().eq(j),e=c.data("sort-value"),c="undefined"!==typeof e?e:c.text();k.push(c)});var f=[],g=0;if(e.data("sort-dir")&&!e.data("sort-desc"))for(c=k.length-1;0<=c;c--)f.push(c);else for(var h=k.slice(0).sort(c),c=0;c<k.length;c++){for(g=d.inArray(k[c],h);-1!=d.inArray(g,f);)g++;f.push(g)}a.find("th").data("sort-dir",null).removeClass("sorting-desc sorting-asc");e.data("sort-dir",l).addClass("sorting-"+
l);g=n.slice(0);for(h=c=0;h<f.length;h++)c=f[h],g[c]=n[h];f=d(g);a.children("tbody").append(f);a.trigger("aftertablesort",{column:j,direction:l});a.css("display")},10))})})};d.fn.stupidtable.dir={ASC:"asc",DESC:"desc"};d.fn.stupidtable.default_sort_fns={"int":function(b,a){return parseInt(b,10)-parseInt(a,10)},"float":function(b,a){return parseFloat(b)-parseFloat(a)},string:function(b,a){return b<a?-1:b>a?1:0},"string-ins":function(b,a){b=b.toLowerCase();a=a.toLowerCase();return b<a?-1:b>a?1:0}}})(jQuery);


  channel.bind('add_score', function(data) {
    console.log(data)

    var score = data.data.score;
    var row = $('.active_item');
    var low_col = row.children('.low');
    var solid_col = row.children('.solid');
    var extreme_col = row.children('.extreme');

    if (score == 1) {
      var current_low = low_col.text();
      var new_low = parseInt(current_low) + 1;

      low_col.html(new_low);
    }

    if (score == 2) {
      var current_solid = solid_col.text();
      var new_solid = parseInt(current_solid) + 1;

      solid_col.html(new_solid);
    }

    if (score == 3) {
      var current_extreme = extreme_col.text();
      var new_extreme = parseInt(current_extreme) + 1;

      extreme_col.html(new_extreme);
    }

    var new_total = (parseInt(low_col.text()) + (parseInt(solid_col.text()) * 2) + (parseInt(extreme_col.text()) * 3)) / (parseInt(low_col.text()) + parseInt(solid_col.text()) + parseInt(extreme_col.text()));

    $('.active_item').children('.total').html(new_total.toFixed(3));

  });

  channel.bind('change_active', function(data) {
    console.log(data.data.new_active_team_id)
    $('.active_item').toggleClass('active_item');
    $('*[data-team-id="' + data.data.new_active_team_id + '"]').toggleClass('active_item');
  });

  $(document).ready(function() {
    $('#dashboard_table').stupidtable();
  })
</script>

<h1 style="font-size: 72px; text-align: center">(646)762-0489</h1>

<table class="dashboard_list" id="dashboard_table">
  <thead>
    <tr>
      <td>Team Name</td>
      <td>Extreme</td>
      <td>Solid</td>
      <td>Low</td>
      <td>Total</td>
    </tr>
  </thead>
  <tbody>
  <%

    @poll.demos.order("id ASC").each do |d| 
      @extreme_count = d.votes.where(score: 3).count
      @solid_count = d.votes.where(score: 2).count
      @low_count = d.votes.where(score: 1).count

      @total = d.votes.count > 0 ? ((@extreme_count * 3).to_f + (@solid_count * 2) + @low_count) / (@extreme_count + @solid_count + @low_count) : 0
  %>
  <tr<% if d.active %> class="active_item"<% end %> data-team-id="<%= d.team_id %>">
    <td><%= Team.find(d.team_id).name %></td>
    <td class="extreme"><%= @extreme_count %></td>
    <td class="solid"><%= @solid_count %></td>
    <td class="low"><%= @low_count %></td>
    <td class="total"><%= @total.round(3) %></td>
  </tr>
  <% end %>
  </tbody>
</table>